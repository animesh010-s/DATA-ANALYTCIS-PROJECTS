# Customer Personality Analysis Project


## Part 1: Python Data Cleaning Script

### Data Cleaning Steps

#### 1. Drop Duplicates
Removes any duplicate rows in the dataset.

#### 2. Handle Missing Values
- Fills missing values in numerical columns (`Income`) with the median.
- Fills missing values in categorical columns (`Education`, `Marital_Status`) with the mode.

#### 3. Convert Data Types
Converts the `Dt_Customer` column to a datetime format for better manipulation.

#### 4. Create New Features
- `TotalChildren`: Adds a new feature representing the total number of children based on existing data.
- `Age`: Adds a new feature representing the age of the customer.

#### 5. Remove Outliers
Caps the `Income` at the 1st and 99th percentiles to minimize the impact of outliers.

#### 6. Standardize Column Names
Makes column names consistent and easy to use by converting them to lowercase and replacing spaces with underscores.

#### 7. Drop Unnecessary Columns
Removes columns that are constant or irrelevant to the analysis (e.g., `Z_CostContact`, `Z_Revenue`).

#### 8. Encode Categorical Variables
- Simple label encoding for binary categorical variables (`Complain`).
- One-hot encoding for other categorical variables (e.g., `Education`, `Marital_Status`).

### Python Script

```python
import pandas as pd

# Load the dataset
df = pd.read_csv('customer_personality_analysis.csv')

# Basic Data Cleaning Steps

# 1. Drop duplicates
df.drop_duplicates(inplace=True)

# 2. Handle missing values
# Fill missing values in 'Income' with the median
df['Income'].fillna(df['Income'].median(), inplace=True)

# Fill missing values in categorical columns with the mode
categorical_columns = ['Education', 'Marital_Status']
for col in categorical_columns:
    df[col].fillna(df[col].mode()[0], inplace=True)

# 3. Convert data types
df['Dt_Customer'] = pd.to_datetime(df['Dt_Customer'])

# 4. Create new features
# Total number of children
df['TotalChildren'] = df['Kidhome'] + df['Teenhome']

# Age of the customer
current_year = pd.to_datetime('today').year
df['Age'] = current_year - df['Year_Birth']

# 5. Remove outliers
# Cap 'Income' at the 1st and 99th percentiles
q1 = df['Income'].quantile(0.01)
q99 = df['Income'].quantile(0.99)
df['Income'] = df['Income'].clip(lower=q1, upper=q99)

# 6. Standardize column names
df.columns = df.columns.str.strip().str.lower().str.replace(' ', '_')

# 7. Drop unnecessary columns
df.drop(columns=['z_costcontact', 'z_revenue'], inplace=True)

# 8. Encode categorical variables
# Label encoding for binary columns like 'Complain'
df['Complain'] = df['Complain'].map({0: 'No', 1: 'Yes'})

# One-hot encoding for other categorical variables
df = pd.get_dummies(df, columns=['Education', 'Marital_Status'], drop_first=True)

# Save the cleaned dataset
df.to_csv('cleaned_customer_personality_analysis.csv', index=False)

print("Data cleaning completed and saved as 'cleaned_customer_personality_analysis.csv'.")
